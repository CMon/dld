 /*
  * dldDisplayPos.h  -  domestic location detection - Display Position class
  *
  * Copyright (c) by Simon Schäfer <Simon.Schaefer@koeln.de>
  *
  * *************************************************************************
  * *                                                                       *
  * * This program is free software; you can redistribute it and/or modify  *
  * * it under the terms of the GNU General Public License as published by  *
  * * the Free Software Foundation; either version 2 of the License, or     *
  * * (at your option) any later version.                                   *
  * *                                                                       *
  * *************************************************************************
 */
#ifndef __DLDDISPLAYPOS_H
#define __DLDDISPLAYPOS_H

#include "tagViewInfo.h"
#include "tagInfoDialog.h"
#include "dldExchangeClient.h"

#include <QGraphicsScene>
#include <QMainWindow>
#include <QDialog>

class QAction;
class QMenu;
class QTabWidget;
class QSettings;
class QDockWidget;
class QDoubleSpinBox;
class DLDLog;
class DLDMap;

class DLDDisplayPos : public QObject
{
	Q_OBJECT
	public:
		DLDDisplayPos (int logLevel, QString logFile);
		~DLDDisplayPos ();

	private slots:
		void loadMap ();
		void connectToGenPos ();
		void about();
		void disconnectFromGenPos ();
		void connectToDB ();
		void disconnectFromDB ();
		void showPersonInfo ();
		void zoom (double zoomBy);

		void mouseEnterTag (int tagId, int x, int y);
		void mouseLeaveTag ();
		void mouseMoveOverTag (int tagId, int x, int y);

		void updatePosition (int tagId);
		void newNode (int nodeId);

	private:
		static const int CONN_NONE	= 0;
		static const int CONN_SSL	= 1;
		static const int CONN_DBUS	= 2;

		QSettings *	settings;
		DLDLog	*	log;

		void readSettings ();
		void writeSettings ();

		void connectToDbus ();
		void connectToSSL ();

		void fillPersonInfoDock (int tagId, TagViewInfo info);

		void addNodeInfo (int nodeId, QPointF position);
		void addTagInfo (int tagId, int lastSeen, QPointF position, QString name = "", QString prename = "", QColor color = Qt::red, QPicture * image = 0);
		void updatePosition (int tagId, double x, double y);

		int			currentConnectionType;

		QMenu *			fileMenu;
		QMenu *			showMenu;
		QMenu *			helpMenu;

		QToolBar *		toolBar;

		QLabel *		zoomLabel;
		QDoubleSpinBox *	zoomSpin;

		QAction *		loadMapAct;
		QAction *		connectToGenPosAct;
		QAction *		disconnectFromGenPosAct;
		QAction *		connectToDBAct;
		QAction *		disconnectFromDBAct;

		QAction *		showPersonInfoAct;
		QAction *		showPersonInfoHintAct;

		QAction *		exitAct;
		QAction *		aboutAct;
		QAction *		aboutQtAct;

		QGraphicsView *		mapView;
		DLDMap *		mapScene;
		QDockWidget *		personInfoDock;

		Ui::personInfoWidget	personInfoUi;
		TagInfoDialog *		tagInfoDialog;

		DLDDataExchangeClient *	exchangeClient;

		QMap <int, TagViewInfo>	tags;
};

#endif
